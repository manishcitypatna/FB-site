// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A testimonial summarization AI agent.
 *
 * - testimonialSummarizer - A function that handles the testimonial summarization process.
 * - TestimonialSummarizerInput - The input type for the testimonialSummarizer function.
 * - TestimonialSummarizerOutput - The return type for the testimonialSummarizer function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TestimonialSummarizerInputSchema = z.object({
  testimonial: z.string().describe('The customer testimonial to summarize.'),
});

export type TestimonialSummarizerInput = z.infer<
  typeof TestimonialSummarizerInputSchema
>;

const TestimonialSummarizerOutputSchema = z.object({
  summary: z.string().describe('The summarized testimonial.'),
  sentiment: z
    .string()
    .describe('The sentiment of the testimonial (positive, negative, neutral).'),
  badge: z
    .string()
    .describe(
      'An SVG badge indicating the sentiment. For example, a colored circle or a simple icon. Use appropriate colors for the sentiment (e.g., green for positive, red for negative, gray/blue for neutral).'
    ),
});

export type TestimonialSummarizerOutput = z.infer<
  typeof TestimonialSummarizerOutputSchema
>;

export async function testimonialSummarizer(
  input: TestimonialSummarizerInput
): Promise<TestimonialSummarizerOutput> {
  return testimonialSummarizerFlow(input);
}

const prompt = ai.definePrompt({
  name: 'testimonialSummarizerPrompt',
  input: {schema: TestimonialSummarizerInputSchema},
  output: {schema: TestimonialSummarizerOutputSchema},
  prompt: `You are an AI expert in summarizing customer testimonials and determining their sentiment.
Your task is to analyze the provided testimonial.
Based on your analysis, you will:
1. Provide a concise summary of the testimonial.
2. Determine the sentiment of the testimonial (positive, negative, or neutral).
3. Generate an SVG badge that visually represents the determined sentiment. The badge should be a simple, clear visual indicator. For example, a colored circle or a simple icon. Use appropriate colors for the sentiment (e.g., green for positive, red for negative, gray/blue for neutral).

Testimonial:
{{{testimonial}}}
`,
  config: {
    safetySettings: [
      {
        category: 'HARM_CATEGORY_HATE_SPEECH',
        threshold: 'BLOCK_ONLY_HIGH',
      },
      {
        category: 'HARM_CATEGORY_DANGEROUS_CONTENT',
        threshold: 'BLOCK_NONE',
      },
      {
        category: 'HARM_CATEGORY_HARASSMENT',
        threshold: 'BLOCK_MEDIUM_AND_ABOVE',
      },
      {
        category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',
        threshold: 'BLOCK_LOW_AND_ABOVE',
      },
    ],
  },
});

const testimonialSummarizerFlow = ai.defineFlow(
  {
    name: 'testimonialSummarizerFlow',
    inputSchema: TestimonialSummarizerInputSchema,
    outputSchema: TestimonialSummarizerOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    if (!output) {
      throw new Error('The AI failed to generate a response that matches the schema.');
    }
    return output;
  }
);
